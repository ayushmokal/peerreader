/// <reference types="node" />
import type * as gax from 'google-gax';
import type { Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  Provides methods for managing permissions to PaLM API resources.
 * @class
 * @memberof v1beta3
 */
export declare class PermissionServiceClient {
    private _terminated;
    private _opts;
    private _providedCustomServicePath;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    warn: (code: string, message: string, warnType?: string) => void;
    innerApiCalls: {
        [name: string]: Function;
    };
    pathTemplates: {
        [name: string]: gax.PathTemplate;
    };
    permissionServiceStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of PermissionServiceClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
     *     For more information, please check the
     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
     *     need to avoid loading the default gRPC version and want to use the fallback
     *     HTTP implementation. Load only fallback version and pass it to the constructor:
     *     ```
     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
     *     const client = new PermissionServiceClient({fallback: true}, gax);
     *     ```
     */
    constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath(),
     * exists for compatibility reasons.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): never[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    /**
     * Create a permission to a specific resource.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent resource of the `Permission`.
     *   Format: tunedModels/{tuned_model}
     * @param {google.ai.generativelanguage.v1beta3.Permission} request.permission
     *   Required. The permission to create.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.ai.generativelanguage.v1beta3.Permission|Permission}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/permission_service.create_permission.js</caption>
     * region_tag:generativelanguage_v1beta3_generated_PermissionService_CreatePermission_async
     */
    createPermission(request?: protos.google.ai.generativelanguage.v1beta3.ICreatePermissionRequest, options?: CallOptions): Promise<[
        protos.google.ai.generativelanguage.v1beta3.IPermission,
        (protos.google.ai.generativelanguage.v1beta3.ICreatePermissionRequest | undefined),
        {} | undefined
    ]>;
    createPermission(request: protos.google.ai.generativelanguage.v1beta3.ICreatePermissionRequest, options: CallOptions, callback: Callback<protos.google.ai.generativelanguage.v1beta3.IPermission, protos.google.ai.generativelanguage.v1beta3.ICreatePermissionRequest | null | undefined, {} | null | undefined>): void;
    createPermission(request: protos.google.ai.generativelanguage.v1beta3.ICreatePermissionRequest, callback: Callback<protos.google.ai.generativelanguage.v1beta3.IPermission, protos.google.ai.generativelanguage.v1beta3.ICreatePermissionRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets information about a specific Permission.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the permission.
     *
     *   Format: `tunedModels/{tuned_model}permissions/{permission}`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.ai.generativelanguage.v1beta3.Permission|Permission}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/permission_service.get_permission.js</caption>
     * region_tag:generativelanguage_v1beta3_generated_PermissionService_GetPermission_async
     */
    getPermission(request?: protos.google.ai.generativelanguage.v1beta3.IGetPermissionRequest, options?: CallOptions): Promise<[
        protos.google.ai.generativelanguage.v1beta3.IPermission,
        (protos.google.ai.generativelanguage.v1beta3.IGetPermissionRequest | undefined),
        {} | undefined
    ]>;
    getPermission(request: protos.google.ai.generativelanguage.v1beta3.IGetPermissionRequest, options: CallOptions, callback: Callback<protos.google.ai.generativelanguage.v1beta3.IPermission, protos.google.ai.generativelanguage.v1beta3.IGetPermissionRequest | null | undefined, {} | null | undefined>): void;
    getPermission(request: protos.google.ai.generativelanguage.v1beta3.IGetPermissionRequest, callback: Callback<protos.google.ai.generativelanguage.v1beta3.IPermission, protos.google.ai.generativelanguage.v1beta3.IGetPermissionRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Updates the permission.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.ai.generativelanguage.v1beta3.Permission} request.permission
     *   Required. The permission to update.
     *
     *   The permission's `name` field is used to identify the permission to update.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   Required. The list of fields to update. Accepted ones:
     *    - role (`Permission.role` field)
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.ai.generativelanguage.v1beta3.Permission|Permission}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/permission_service.update_permission.js</caption>
     * region_tag:generativelanguage_v1beta3_generated_PermissionService_UpdatePermission_async
     */
    updatePermission(request?: protos.google.ai.generativelanguage.v1beta3.IUpdatePermissionRequest, options?: CallOptions): Promise<[
        protos.google.ai.generativelanguage.v1beta3.IPermission,
        (protos.google.ai.generativelanguage.v1beta3.IUpdatePermissionRequest | undefined),
        {} | undefined
    ]>;
    updatePermission(request: protos.google.ai.generativelanguage.v1beta3.IUpdatePermissionRequest, options: CallOptions, callback: Callback<protos.google.ai.generativelanguage.v1beta3.IPermission, protos.google.ai.generativelanguage.v1beta3.IUpdatePermissionRequest | null | undefined, {} | null | undefined>): void;
    updatePermission(request: protos.google.ai.generativelanguage.v1beta3.IUpdatePermissionRequest, callback: Callback<protos.google.ai.generativelanguage.v1beta3.IPermission, protos.google.ai.generativelanguage.v1beta3.IUpdatePermissionRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Deletes the permission.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the permission.
     *   Format: `tunedModels/{tuned_model}/permissions/{permission}`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.protobuf.Empty|Empty}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/permission_service.delete_permission.js</caption>
     * region_tag:generativelanguage_v1beta3_generated_PermissionService_DeletePermission_async
     */
    deletePermission(request?: protos.google.ai.generativelanguage.v1beta3.IDeletePermissionRequest, options?: CallOptions): Promise<[
        protos.google.protobuf.IEmpty,
        (protos.google.ai.generativelanguage.v1beta3.IDeletePermissionRequest | undefined),
        {} | undefined
    ]>;
    deletePermission(request: protos.google.ai.generativelanguage.v1beta3.IDeletePermissionRequest, options: CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.ai.generativelanguage.v1beta3.IDeletePermissionRequest | null | undefined, {} | null | undefined>): void;
    deletePermission(request: protos.google.ai.generativelanguage.v1beta3.IDeletePermissionRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.ai.generativelanguage.v1beta3.IDeletePermissionRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Transfers ownership of the tuned model.
     * This is the only way to change ownership of the tuned model.
     * The current owner will be downgraded to writer role.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the tuned model to transfer ownership .
     *
     *   Format: `tunedModels/my-model-id`
     * @param {string} request.emailAddress
     *   Required. The email address of the user to whom the tuned model is being
     *   transferred to.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.ai.generativelanguage.v1beta3.TransferOwnershipResponse|TransferOwnershipResponse}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/permission_service.transfer_ownership.js</caption>
     * region_tag:generativelanguage_v1beta3_generated_PermissionService_TransferOwnership_async
     */
    transferOwnership(request?: protos.google.ai.generativelanguage.v1beta3.ITransferOwnershipRequest, options?: CallOptions): Promise<[
        protos.google.ai.generativelanguage.v1beta3.ITransferOwnershipResponse,
        (protos.google.ai.generativelanguage.v1beta3.ITransferOwnershipRequest | undefined),
        {} | undefined
    ]>;
    transferOwnership(request: protos.google.ai.generativelanguage.v1beta3.ITransferOwnershipRequest, options: CallOptions, callback: Callback<protos.google.ai.generativelanguage.v1beta3.ITransferOwnershipResponse, protos.google.ai.generativelanguage.v1beta3.ITransferOwnershipRequest | null | undefined, {} | null | undefined>): void;
    transferOwnership(request: protos.google.ai.generativelanguage.v1beta3.ITransferOwnershipRequest, callback: Callback<protos.google.ai.generativelanguage.v1beta3.ITransferOwnershipResponse, protos.google.ai.generativelanguage.v1beta3.ITransferOwnershipRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Lists permissions for the specific resource.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent resource of the permissions.
     *   Format: tunedModels/{tuned_model}
     * @param {number} [request.pageSize]
     *   Optional. The maximum number of `Permission`s to return (per page).
     *   The service may return fewer permissions.
     *
     *   If unspecified, at most 10 permissions will be returned.
     *   This method returns at most 1000 permissions per page, even if you pass
     *   larger page_size.
     * @param {string} [request.pageToken]
     *   Optional. A page token, received from a previous `ListPermissions` call.
     *
     *   Provide the `page_token` returned by one request as an argument to the
     *   next request to retrieve the next page.
     *
     *   When paginating, all other parameters provided to `ListPermissions`
     *   must match the call that provided the page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.ai.generativelanguage.v1beta3.Permission|Permission}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listPermissionsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listPermissions(request?: protos.google.ai.generativelanguage.v1beta3.IListPermissionsRequest, options?: CallOptions): Promise<[
        protos.google.ai.generativelanguage.v1beta3.IPermission[],
        protos.google.ai.generativelanguage.v1beta3.IListPermissionsRequest | null,
        protos.google.ai.generativelanguage.v1beta3.IListPermissionsResponse
    ]>;
    listPermissions(request: protos.google.ai.generativelanguage.v1beta3.IListPermissionsRequest, options: CallOptions, callback: PaginationCallback<protos.google.ai.generativelanguage.v1beta3.IListPermissionsRequest, protos.google.ai.generativelanguage.v1beta3.IListPermissionsResponse | null | undefined, protos.google.ai.generativelanguage.v1beta3.IPermission>): void;
    listPermissions(request: protos.google.ai.generativelanguage.v1beta3.IListPermissionsRequest, callback: PaginationCallback<protos.google.ai.generativelanguage.v1beta3.IListPermissionsRequest, protos.google.ai.generativelanguage.v1beta3.IListPermissionsResponse | null | undefined, protos.google.ai.generativelanguage.v1beta3.IPermission>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent resource of the permissions.
     *   Format: tunedModels/{tuned_model}
     * @param {number} [request.pageSize]
     *   Optional. The maximum number of `Permission`s to return (per page).
     *   The service may return fewer permissions.
     *
     *   If unspecified, at most 10 permissions will be returned.
     *   This method returns at most 1000 permissions per page, even if you pass
     *   larger page_size.
     * @param {string} [request.pageToken]
     *   Optional. A page token, received from a previous `ListPermissions` call.
     *
     *   Provide the `page_token` returned by one request as an argument to the
     *   next request to retrieve the next page.
     *
     *   When paginating, all other parameters provided to `ListPermissions`
     *   must match the call that provided the page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.ai.generativelanguage.v1beta3.Permission|Permission} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listPermissionsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listPermissionsStream(request?: protos.google.ai.generativelanguage.v1beta3.IListPermissionsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listPermissions`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent resource of the permissions.
     *   Format: tunedModels/{tuned_model}
     * @param {number} [request.pageSize]
     *   Optional. The maximum number of `Permission`s to return (per page).
     *   The service may return fewer permissions.
     *
     *   If unspecified, at most 10 permissions will be returned.
     *   This method returns at most 1000 permissions per page, even if you pass
     *   larger page_size.
     * @param {string} [request.pageToken]
     *   Optional. A page token, received from a previous `ListPermissions` call.
     *
     *   Provide the `page_token` returned by one request as an argument to the
     *   next request to retrieve the next page.
     *
     *   When paginating, all other parameters provided to `ListPermissions`
     *   must match the call that provided the page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.ai.generativelanguage.v1beta3.Permission|Permission}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/permission_service.list_permissions.js</caption>
     * region_tag:generativelanguage_v1beta3_generated_PermissionService_ListPermissions_async
     */
    listPermissionsAsync(request?: protos.google.ai.generativelanguage.v1beta3.IListPermissionsRequest, options?: CallOptions): AsyncIterable<protos.google.ai.generativelanguage.v1beta3.IPermission>;
    /**
     * Return a fully-qualified model resource name string.
     *
     * @param {string} model
     * @returns {string} Resource name string.
     */
    modelPath(model: string): string;
    /**
     * Parse the model from Model resource.
     *
     * @param {string} modelName
     *   A fully-qualified path representing Model resource.
     * @returns {string} A string representing the model.
     */
    matchModelFromModelName(modelName: string): string | number;
    /**
     * Return a fully-qualified permission resource name string.
     *
     * @param {string} tuned_model
     * @param {string} permission
     * @returns {string} Resource name string.
     */
    permissionPath(tunedModel: string, permission: string): string;
    /**
     * Parse the tuned_model from Permission resource.
     *
     * @param {string} permissionName
     *   A fully-qualified path representing Permission resource.
     * @returns {string} A string representing the tuned_model.
     */
    matchTunedModelFromPermissionName(permissionName: string): string | number;
    /**
     * Parse the permission from Permission resource.
     *
     * @param {string} permissionName
     *   A fully-qualified path representing Permission resource.
     * @returns {string} A string representing the permission.
     */
    matchPermissionFromPermissionName(permissionName: string): string | number;
    /**
     * Return a fully-qualified tunedModel resource name string.
     *
     * @param {string} tuned_model
     * @returns {string} Resource name string.
     */
    tunedModelPath(tunedModel: string): string;
    /**
     * Parse the tuned_model from TunedModel resource.
     *
     * @param {string} tunedModelName
     *   A fully-qualified path representing TunedModel resource.
     * @returns {string} A string representing the tuned_model.
     */
    matchTunedModelFromTunedModelName(tunedModelName: string): string | number;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}
